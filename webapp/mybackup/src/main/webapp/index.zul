<!-- main index.zul -->
<?variable-resolver class="org.zkoss.zkplus.spring.DelegatingVariableResolver"?>
<zk xmlns:w="http://www.zkoss.org/2005/zk/client" xmlns:x="xhtml" xmlns:ca="http://www.zkoss.org/2005/zk/client/attribute">

<window  apply="org.zkoss.bind.BindComposer" viewModel="@id('vm') @init(MainVM)" vflex="1">
<timer id="timer" delay="3000" repeats="true" onTimer="@command('updateView')"/>
<timer id="timer2" delay="1000" repeats="@load(empty vm.lastUpdate?'true':'false')" onTimer="@command('updateServers')"/>
<label value="pending update..."  visible="@load(empty vm.lastUpdate)"/>
<vlayout vflex="1" hflex="1" visible="@load(not empty vm.lastUpdate)">
		<hlayout>Last updated on <label value="@load(vm.lastUpdate, after={'updateView'})"/></hlayout>
		<hlayout>Server name: <label value="@load(vm.server.hostname)"/></hlayout>
		<hlayout>Server IP: <label value="@load(vm.server.hostIP)"/></hlayout>
		Container list:
		<grid span="true" sizedByContent="true" model="@load(vm.server.containers)" vflex="1">
				<template name="model" var="container">
						<row vflex="1" hflex="1">
							<cell hflex="1">
								<label value="@load(container.name)"/>
							</cell>
							<cell hflex="1">
									<vbox align="center">
										<label value="@load(container.state, after={'updateView'})"/>
										<div class="btn-group">
											<button class="btn-primary" label="Start" if="${container.state eq 'STOPPED'}"/>
											<button class="btn-danger" label="Stop" if="${container.state ne 'STOPPED'}"/>
											<button class="btn-danger" label="Freeze" if="${container.state eq 'RUNNING'}"/>
											<button class="btn-warning" label="Unfreeze" if="${container.state eq 'FROZEN'}"/>
											<button class="btn-info" label="Clone" if="${container.state eq 'STOPPED'}"/>
										</div>
									</vbox>
							</cell>
							<cell hflex="1">
								<vlayout visible="@load(container.state ne 'STOPPED', after={'updateView'})">
									<label value="@load(container.IPv4, after={'updateView'})"/>
									<label value="@load(container.MAC, after={'updateView'})"/>
								</vlayout>
							</cell>
							<cell hflex="2">
								<grid model="@load(container.ipForwards, after={'updateView'})"  hflex="1" vflex="1">
									<template name="model" var="ipforward">
										<row>
											<cell>
												<hlayout>
													<label value="@load(ipforward.source)"/> is redirected to 
													<label value="@load(ipforward.dest)"/> on port 
													<label value="@load(ipforward.port)"/> for protocol
													<label value="@load(ipforward.protocol)"/>
												</hlayout>
											</cell>
										</row>
									</template>
								</grid>
							</cell>
						</row>
				</template>
		</grid>
</vlayout>
</window>
</zk>

